name: time-tracker-ui-cd-prod

on:
  release:
    types:
      - published

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
        TF_WORKSPACE: prod
        WORKING_DIR: infrastructure/
        ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
        ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
        ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
        ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get the release_version
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo $RELEASE_VERSION

    - name: Login to azure
      uses: Azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.TF_ARM_CLIENT_ID }}","clientSecret":"${{ secrets.TF_ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.TF_ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TF_ARM_TENANT_ID }}"}'

    - name: Unlock PROD secrets
      uses: sliteteam/github-action-git-crypt-unlock@1.2.0
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY_PROD }}
      
    - name: Build the docker image
      run: |-
        docker build \
          --target production -t timetracker_ui  -f Dockerfile_prod \
          .

    - name: Publish docker image to prod azure container registry
      run: |
        make login publish acr=timetrackerserviceprodregistry image_tag=$RELEASE_VERSION

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.9

    - name: Authenticate with the TF modules repository
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.INFRA_TERRAFORM_MODULES_SSH_PRIV_KEY }}

    - name: Terraform Init
      working-directory: ${{ env.WORKING_DIR }}
      run: terraform init

    - name: Terraform Apply
      working-directory: ${{ env.WORKING_DIR }}
      run: terraform apply -lock=false -var-file="${{ env.TF_WORKSPACE }}.tfvars" -var "image_tag=$RELEASE_VERSION" -auto-approve
